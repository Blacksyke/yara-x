[package]
name = "yara-x"
version.workspace = true
authors.workspace = true
edition.workspace = true
description = "An experimental implementation of YARA in Rust"
readme = "README.md"
license = "MIT"
repository = "https://github.com/VirusTotal/yara-x"
homepage = "https://github.com/VirusTotal/yara-x"

[features]
# Controls whether compile-time optimizations are applied or not.
# If this feature is enabled, expressions like `2+2+2` and
# `true or false`, whose value can be determined at compile time,
# will be reduced to its final value, instead of producing code
# that actually computes the expression.
compile-time-optimization = []

# Features for enabling/disabling test modules.
test_proto2-module = []
test_proto3-module = []

# Features that are enabled by default.
default = [
    "compile-time-optimization",
    "test_proto2-module",
    "test_proto3-module",
]

[dependencies]
ansi_term = { workspace = true }
anyhow = { workspace = true }
ariadne = { workspace = true }
ascii_tree = { workspace = true }
bitmask = { workspace = true }
bitvec = { workspace = true }
bstr = { workspace = true  }
globset = { workspace = true }
intaglio = { workspace = true }
lazy_static = { workspace = true }
memmap = { workspace = true }
protobuf = { workspace = true }
rustc-hash = { workspace = true }
thiserror = { workspace = true }
walrus = { workspace = true }
wasmtime = { workspace = true, features=["cranelift"]  }
yansi = { workspace = true }
yara-x-fmt = { workspace = true }
yara-x-macros = { workspace = true }
yara-x-parser = { workspace = true }
yara-x-proto = { workspace = true }


[build-dependencies]
protobuf = { workspace = true }
protobuf-codegen = { workspace = true }
protobuf-parse = { workspace = true }
yara-x-proto = { workspace = true }

[dev-dependencies]
predicates = { workspace = true }
pretty_assertions = { workspace = true }
yaml-rust = { workspace = true }
yara = { version = "0.16.2", features = ["vendored"] }

